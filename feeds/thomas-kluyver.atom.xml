<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Merge Stories</title><link href="http://mergestories.com/" rel="alternate"></link><link href="http://mergestories.com/feeds/thomas-kluyver.atom.xml" rel="self"></link><id>http://mergestories.com/</id><updated>2014-09-13T12:10:00-04:00</updated><entry><title>Fixing a bug in Python</title><link href="http://mergestories.com/s/fixing-a-bug-in-python/" rel="alternate"></link><updated>2014-09-13T12:10:00-04:00</updated><author><name>Thomas Kluyver</name></author><id>tag:mergestories.com,2014-09-13:s/fixing-a-bug-in-python/</id><summary type="html">&lt;p&gt;Copy. Paste. The things you do every day are the most annoying things when they break. And it was broken - when my program tried to get text from the clipboard, special characters like â‚¬ came back messed up. It's 2012, surely by now computers should let me use whatever characters I like!?&lt;/p&gt;
&lt;p&gt;I was using the clipboard functions in tkinter, Python's wrapper around the Tk system. So which bit is the bug in? I don't know, but I'll start with Python, because I understand that better than Tk. I file a bug, explaining exactly what I'm seeing, and what I want to happen. In minutes, another Linux user comments to say that they see the problem too, but in a slightly different way. But then someone running Windows says it works fine for them - the bug is platform dependent.&lt;/p&gt;
&lt;p&gt;I get sidetracked for a while when I test on my work computer, and find that I still get the wrong thing, but not the same wrong thing I got at home. They're running the same version of Ubuntu, why are they doing different things? Light dawns: it's not the computers, the bug depends on what program I copied from. If we can fix this, we'll need to make sure the fix works whatever program you copy from.&lt;/p&gt;
&lt;p&gt;The first commenter soon identifies an option called UTF8_STRING which consistently gets us the right answer. So why isn't that the default? Operating systems again: that option is mainly useful on Linux, and it may not work at all on other platforms.&lt;/p&gt;
&lt;p&gt;I'm ready to prepare a patch. This is the first time I've contributed code to Python, but the &lt;a href="https://docs.python.org/devguide/"&gt;developer guide&lt;/a&gt; walks me through the steps. I download the source code for Python, compile it, and run the tests. OK. I make my changes, run the tests again to check that I didn't break anything, save the patch file, and attach it to my issue. It's a simple change: the code finds out what platform it's running on, and then uses UTF8_STRING as the default if it's safe to do so.&lt;/p&gt;
&lt;p&gt;The commenters on the issue review my changes. It's a bit too simple, and I add some more code. Someone asks for unit tests, but it's agreed that there's no easy way to test this code, so I'm let off writing those. I make two more versions of the patch, then someone else makes a small change and uploads a fourth version, which is ready to land.&lt;/p&gt;
&lt;p&gt;Since I'm a new contributor, I have to sign a contributor agreement. This is really unusual for open source projects. Normally there are no formailities about contributing, but Python is a big and serious enough project that there's a bit of paperwork. I print out the form, sign it, and email a photo of it to the Python Software Foundation. After a day or so, it's confirmed, and my patch lands. I'm a contributor to Python! It feels good.&lt;/p&gt;
&lt;p&gt;I've made a few more small contributions to Python since then. It's easier now that I'm familiar with the procedure, though I've gone back to the developer guide each time. For such a famous piece of software, it's surprisingly easy to get changes accepted.&lt;/p&gt;</summary><category term="project - python"></category><category term="kind of contribution - bug report"></category><category term="kind of contribution - code"></category><category term="helped by - maintainer"></category><category term="helped by - documentation"></category></entry></feed>